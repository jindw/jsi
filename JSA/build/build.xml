<project name="JSide" default="build" basedir="../">
	<tstamp>
		<format property="version" pattern="yyyyMMdd" />
	</tstamp>

	<taskdef name="retrotranslator" classname="net.sf.retrotranslator.transformer.RetrotranslatorTask">
		<classpath>
			<fileset dir="build/lib">
				<include name="*.jar" />
			</fileset>
		</classpath>
	</taskdef>
	<target name="copyjsi">
		<jar destfile="lib/JSI.jar">
			<fileset dir="../JSI2/web/WEB-INF/classes">
				<include name="**/*.*" />
			</fileset>
		</jar>
	</target>
	<target name="zip-example">
		<zip destfile="build/dest/Example-${version}.zip">
			<fileset dir="web">
				<include name="**/*.*" />
				<exclude name="/WEB-INF/classes/**/*.*" />
				<exclude name="/webstart/**/*.*" />
			</fileset>
		</zip>
	</target>
	<target name="test-JSA">
		<java classname="org.jside.jsi.tools.export.ExportAction" classpath="build/dest/JSide.jar">
			<arg value="-scriptBase" />
			<arg value="${basedir}/../JSI2/web/scripts/" />
			<arg value="-config.debugCalls" />
			<arg value="$log.debug,$log.trace,$log.trace" />
			<arg value="-config.features" />
			<arg value="org.xidea.jsi.boot:$log" />
			<arg value="-config.ascii" />
			<arg value="false" />
			<arg value="-lineSeparator" />
			<arg value="\r\n&#10;/*-+-*/\r\n" />

			<arg value="-bootPackage" />
			<arg value="org.xidea.jsidoc.util" />
			<arg value="org.xidea.jsidoc.export" />
			<arg value="-exports" />
			<arg value="org.xidea.jsidoc.util.*" />
			<arg value="org.xidea.jsidoc.export.*" />
			<arg value="-bootCached" />
			<arg value="org.xidea.jsidoc.util:*" />
			<arg value="-outputBoot" />
			<arg value="${basedir}/build/dest/boot.js" />
			<arg value="-outputJAR" />
			<arg value="${basedir}/build/dest/export.jar" />
			<arg value="-outputXML" />
			<arg value="${basedir}/build/dest/export.xml" />
			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/export.js" />
			<arg value="-outputPreload" />
			<arg value="${basedir}/build/dest/preload.js" />
		</java>
	</target>
	<!-- jar-->
	<target name="compress">
		<java classname="org.jside.jsi.tools.export.ExportAction" classpath="build/dest/JSide.jar">
			<arg value="-scriptBase" />
			<arg value="${basedir}/web/scripts" />
			<arg value="-config.ascii" />
			<arg value="false" />

			<arg value="-exports" />
			<arg value="org.jside.jsi.tools.web:Compressor" />

			<arg value="-outputExported" />
			<arg value="${basedir}/build/dest/compressor.js" />
		</java>
		<copy overwrite="true" tofile="build/dest/index.html" file="web/scripts/compressor.xhtml" />
		<loadfile property="source" srcFile="${basedir}/build/dest/compressor.js" encoding="UTF-8" />
		<replace file="build/dest/index.html" encoding="utf-8" token='form action="export.action"' value='form action="http://litecompiler.appspot.com/scripts/export.action"' />
		<replace file="build/dest/index.html" encoding="utf-8" token="$import(" value="//$import(" />
		<replace file="build/dest/index.html" encoding="utf-8" token='&lt;script src="boot.js"&gt;&lt;/script&gt;' value="&lt;script&gt;${source}&lt;/script&gt;" />
	</target>
	<target name="package-rhino">
		<jar destfile="build/dest/js.jar">
			<fileset dir="classes">
				<include name="org/mozilla/javascript/TokenStream.class" />
			</fileset>
			<zipfileset src="lib/js.jar" defaultexcludes="false">
				<!--
				<exclude name="**/*.java" />
				-->
				<exclude name="**/tools/**/*.*" />
				<exclude name="**/xml/impl/**/*.*" />
				<exclude name="**/xmlimpl/**/*.*" />
				<exclude name="**/jdk11/**/*.*" />
				<!--
				<exclude name="**/debug/**/*.*" />
				-->
				<exclude name="org/mozilla/javascript/TokenStream.class" />
			</zipfileset>
		</jar>
	</target>
	<target name="copy-dependence" depends="package-rhino">
		<mkdir dir="build/dest/dependence" />
		<jar destfile="build/dest/dependence/js.jar">
			<zipfileset src="build/dest/js.jar">
				<exclude name="**/*.java" />
				<include name="**/*.*" />
			</zipfileset>
		</jar>
		<jar destfile="build/dest/dependence/Lite.jar">
			<zipfileset src="lib/Lite.jar">
				<include name="**/*.*" />
				<include name="org/apache/commons/**/*.*" />
				<exclude name="org/mozilla/**/**" />
				<exclude name="**/*.java" />
			</zipfileset>
		</jar>
		<!--
		<jar destfile="build/dest/dependence/JSI.jar">
			<zipfileset src="lib/JSI.jar">
				<exclude name="**/*.java" />
				<exclude name="org/apache/commons/**/*.*" />
				<include name="**/*.*" />
			</zipfileset>
		</jar>
		-->
		<jar destfile="build/dest/dependence/chardet.jar">
			<zipfileset src="lib/chardet.jar">
				<exclude name="**/*.java" />
				<include name="**/*.*" />
			</zipfileset>
		</jar>
		<jar destfile="build/dest/dependence/nekohtml.jar">
			<zipfileset src="lib/nekohtml.jar">
				<include name="**/*.*" />
			</zipfileset>
			<zipfileset src="lib/xercesImpl.jar">
				<include name="**/*.*" />
				<exclude name="META-INF/services/javax*" />
				<exclude name="org/apache/wml/**/*.*" />
				<!--
				<exclude name="org/apache/html/**/*.*" />
				<exclude name="org/apache/xerces/impl/xs/**/*.*"/>
				-->
				<exclude name="org/apache/xerces/impl/xpath/**/*.*"/>
				<exclude name="org/apache/xerces/jaxp/**/*.*"/>
			</zipfileset>
		</jar>
	</target>
	<target name="jsa">
		<jar destfile="build/dest/JSA-${version}.jar">
			<fileset dir="classes">
				<include name="**/jsi/tools/**/*.*" />
				<exclude name="**/JSA.*" />
				<exclude name="**/JSFormatFilter.*" />
				<exclude name="**/*test*.xml" />
				<exclude name="**/test/**/*.class" />
			</fileset>
		</jar>
	</target>
	<target name="jar" depends="copy-dependence">
		<jar destfile="build/dest/JSide.jar">
			<manifest>
				<attribute name="Main-Class" value="org.jside.JSide" />
			</manifest>
			<fileset dir="classes">
				<include name="org/jside/*.*" />
				<include name="org/jside/ui/*.*" />
				<include name="org/jside/ui/icon/*.*" />
				<include name="cn/jside/jsi/tools/**" />

				<include name="org/jside/webserver/**" />
				<include name="org/jside/jsi/tools/**" />
				<exclude name="org/jside/jsi/tools/ui/**"/>
				<exclude name="org/jside/jsi/tools/ui/**"/>

				<include name="org/xidea/commons/i18n/**" />

				<include name="org/jside/xtools/**" />

				<exclude name="org/jside/webserver/handler/Velocity*"/>
				<exclude name="org/jside/webserver/handler/Freemarker*"/>
				<exclude name="**/*Test.class" />
				<exclude name="**/*test*.xml" />
				<exclude name="**/test/**/*.class" />
				<exclude name="cn/**/test/**/*.*" />
				<exclude name="**/TokenStream.class" />
			</fileset>
			<zipfileset dir="classes" prefix="internal/">
				<include name="org/jside/webserver/handler/Velocity*"/>
				<include name="org/jside/webserver/handler/Freemarker*"/>
			</zipfileset>
			<zipgroupfileset dir="lib/"  includes="servlet-api.jar"/>
			<zipgroupfileset dir="build/dest/dependence/" includes="*.jar" excludes="nekohtml.jar"/>
		</jar>
	</target>

	<target name="jar-source">
		<jar destfile="build/dest/JSide-SOURCE.jar">
			<zipfileset src="build/dest/JSide.jar">
				<exclude name="META-INF/XIDEA*.*" />
			</zipfileset>
			<fileset dir="../FileServer/src/main">
				<include name="org/jside/webserver/**/*.java" />
				<exclude name="**/test/**/*.*" />
			</fileset>
			<zipfileset src="lib/Lite.jar">
				<include name="**/*.java" />
			</zipfileset>
			<fileset dir="src/server">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="src/jsi">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="src/ui">
				<include name="**/*.java" />
			</fileset>
			<fileset dir="src/jsaui">
				<include name="**/*.java" />
			</fileset>
		</jar>
	</target>
	<target name="gen-key-if-not-exist" if="key-not-exist">
		<antcall target="gen-key"  />
	</target>
	<target name="gen-key">
		<input addproperty="password" />
		<echo message="${password}" />
		<genkey alias="xidea-test" storepass="${password}" keystore="build/dest/testkey.keystore">
			<dname>
				<param name="CN" value="测试签名" />
				<param name="OU" value="xidea测试用签名" />
				<param name="O" value="http://www.xidea.org/" />
				<param name="L" value="塔溪" />
				<param name="ST" value="江西" />
				<param name="C" value="CN" />
			</dname>
		</genkey>
	</target>
	<target name="signjar">
		<input addproperty="password" />
		<echo message="${password}" />
		<condition property="key-not-exist">
			<not>
				<available file="build/dest/testkey.keystore" />
			</not>
		</condition>
		<antcall target="gen-key-if-not-exist"  />
		<!--
		jarsigner -keystore ../../testkey.keystore -signedjar ${filename} xidea-test
		-->
		<signjar  jar="build/dest/JSide.jar"
			alias="xidea-test" storepass="${password}"
			keystore="build/dest/testkey.keystore" />
		<signjar jar="build/dest/dependence/nekohtml.jar" alias="xidea-test" storepass="${password}" keystore="build/dest/testkey.keystore" />
	</target>
	<target name="build" depends="jar,jar-source">
		<delete>
			<fileset dir="build/dest/">
				<include name="JSide-*.jar" />
			</fileset>
		</delete>
		<jar destfile="build/dest/JSide-${version}.jar">
			<manifest>
				<attribute name="Main-Class" value="org.jside.JSide" />
			</manifest>
			<zipfileset src="build/dest/JSide.jar"/>
			<zipfileset src="build/dest/dependence/nekohtml.jar"/>
		</jar>
		<retrotranslator backport="java.lang.StringBuilder:java.lang.StringBuffer" retainapi="true" destjar="build/dest/JSide-${version}-JDK4.jar" verify="false">
			<jarfileset file="build/dest/JSide-${version}.jar" />
		</retrotranslator>
		<jar destfile="build/dest/JSAUI.jar">
			<manifest>
				<attribute name="Main-Class" value="org.jside.jsi.tools.ui.JSA" />
			</manifest>
			<zipfileset src="build/dest/JSide-${version}.jar"/>
		</jar>
	</target>
	<target name="build-dependence">
		<antcall target="call-dependence">
			<param name="dependenceTarget" value="build" />
		</antcall>
	</target>
	<target name="jar-dependence">
		<antcall target="call-dependence">
			<param name="dependenceTarget" value="jar" />
		</antcall>
	</target>
	<target name="call-dependence">
		<condition property="dependenceTarget" value="build" else="jar">
			<equals arg1="${dependenceTarget}" arg2="build" />
		</condition>
		<echo>call-dependence : ${dependenceTarget}</echo>

		<ant antfile="build/build.xml" dir="../JSI2/" target="${dependenceTarget}"/>
		<copy file="../JSI2/build/dest/JSI.jar" todir="lib" />
		<copy file="../JSI2/build/dest/JSI.jar" todir="../Lite2/web/WEB-INF/lib" />
		
		<ant antfile="build/build.xml" dir="../Lite2/" target="${dependenceTarget}"/>
		<copy file="../Lite2/build/dest/Lite.jar" todir="lib" />
		<copy file="../Lite2/build/dest/Lite.jar" todir="../JSI2/web/WEB-INF/lib" />
		<copy file="../Lite2/build/dest/Lite.jar" todir="../FileServer/web/WEB-INF/lib" />

	</target>
</project>